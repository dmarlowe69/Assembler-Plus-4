POBJ2PRGN.ASM......PAGE 0001

LINE# LOC   CODE        LINE































































OBJ2PRG"*......PAGE 0002

LINE# LOC   CODE        LINE


00003  0000              ;*********************************
00004  0000              *=$1001                ;START OF BASIC
00005  1001              ;*********************************
00006  1001              ; SET BSTUB TO ONE TO ALLOW FOR
00007  1001              ; INSERTION OF BASIC STUB CODE
00008  1001              ;*********************************
00009  1001              BSTUB  = 1
00010  1001              ;*********************************
00011  1001              ;
00012  1001              ;         OBJ2PRG64
00013  1001              ;      OBJ2PRG.C64 V072882
00014  1001              ;CONVERT OBJECT FILE FROM ASSEMBLER64
00015  1001              ;        TO PROGRAM FILE
00016  1001              ; (C) 1982 BY COMMODORE MACHINES
00017  1001              ;
00018  1001              ;  WRITTEN BY DENTON MARLOWE
00019  1001              ;*********************************
00020  1001              ;
00021  1001              ; BASIC FORMAT PROGRAM
00022  1001              ;
00023  1001              ; 10 SYS(2063)
00024  1001              ;
00025  1001              ;*********************************
00027  1001  0D 10              .WORD BASIC     ;LINE LINK POINTER
00028  1003  0A                 .BYTE $0A,$00   ;LINE NUMBER (10)
00028  1004  00 
00029  1005  9E                 .BYTE 158       ;SYS COMMAND TOKEN
00030  1006  28 34              .BYTE '(4111)'  ;CALL TO $080F
00031  100C  00                 .BYTE $00       ;END OF LINE
00032  100D              BASIC
00033  100D  00                 .BYTE $00,$00   ;END OF BASIC
00033  100E  00 
00035  100F              >
00036  100F              ;*********************************
00037  100F              ;*=$100F        ;OBJ2PRG ORGIN
00038  100F              ;*********************************
00039  100F              ; SET FLAG TO ALLOW BASIC
00040  100F              ; AND KERNAL (ERROR) MESSAGES
00041  100F              ; $80 FOR BASIC
00042  100F              ; $40 FOR KERNAL
00043  100F              ;*********************************
00044  100F              SETMSG=$FF90
00045  100F  A9 40              LDA #$40        ;ALLOW KERNAL MESSAGES
00046  1011  20 90 FF           JSR SETMSG
00047  1014              ;*********************************
00048  1014              ; MAIN BODY OF CODE
00049  1014              ;*********************************
00050  1014              .FIL   OBJ2PRGN.ASM
00051  1014              ;*********************************
00052  1014              ;
00053  1014              ;         OBJ2PRG64
00054  1014              ;      OBJ2PRG.C64 V072882
00055  1014              ;CONVERT OBJECT FILE FROM ASSEMBLER64
00056  1014              ;        TO PROGRAM FILE
00057  1014              ; (C) 1982 BY COMMODORE MACHINES






OBJ2PRG"*......PAGE 0003

LINE# LOC   CODE        LINE


00058  1014              ;
00059  1014              ;  WRITTEN BY DENTON MARLOWE
00060  1014              ;*********************************
00061  1014              ; MAIN BODY OF CODE
00062  1014              ;*********************************
00063  1014              ; ZEROPAGE USAGE EQUATES
00064  1014              ;*********************************
00065  1014              STATUS=$90             ;STATUS BYTE
00066  1014              LA     =$B8            ;CURRENT LOGICAL DEVICE NU
MBER
00067  1014              SA     =$B9            ;CURRENT SECONDARY ADDRESS

00068  1014              FA     =$BA            ;CURRENT DEVICE NUMBER
00069  1014              ZEROPG=$FB             ;ZERO PAGE POINTER
00070  1014              ZEROUR=$FD             ;ZERO PAGE POINTER
00071  1014              ;*********************************
00072  1014              ; KERNAL JMUP TABLE EQUATES
00073  1014              ;*********************************
00074  1014              TALKSA=$FF96           ;SERIAL TALK SA
00075  1014              IECIN  =$FFA5          ;SERIAL IN
00076  1014              UNTALK=$FFAB           ;SERIAL UNTALK
00077  1014              STOP   =$FFE1          ;CHECK FOR STOP
00078  1014              TALK   =$FFB4          ;SERIAL TALK
00079  1014              SETLFS=$FFBA           ;SET LOGICAL FILE
00080  1014              SETNAM=$FFBD           ;SET FILENAME
00081  1014              OPEN   =$FFC0          ;OPEN FILE
00082  1014              CLOSE  =$FFC3          ;CLOSE LOGICAL FILE
00083  1014              CHKIN  =$FFC6          ;OPEN INPUT CHANNEL
00084  1014              CHKOUT=$FFC9           ;OPEN OUTPUT CHANNEL
00085  1014              CLRCHN=$FFCC           ;RESET I/O CHANNELS
00086  1014              CHRIN  =$FFCF          ;GET KEYBOARD INPUT
00087  1014              CHROUT=$FFD2           ;OUTPUT CHARACTER
00088  1014              READST=$FFB7           ;READ I/O STATUS
00089  1014              ;*********************************
00090  1014              ;
00091  1014              ; OBJ2PRG ENTRY POINT
00092  1014              ;
00093  1014              ;*********************************
00094  1014              OBJPRG =*
00095  1014  20 CC FF           JSR CLRCHN      ;RSET I/O
00096  1017  A9 00              LDA #$00        ;ZERO BYTE
00097  1019  8D 3D 13           STA RECORD      ;RECORD COUNT
00098  101C  8D 3E 13           STA RECORD+1    ;
00099  101F  8D 3F 13           STA STADD       ;START ADDRESS
00100  1022  85 90              STA STATUS      ;I/O STATUS
00101  1024  8D 42 13           STA SCROPT      ;SCREEN OUTPUT OPTION
00102  1027              ;*********************************
00103  1027              ; INIT DISK
00104  1027              ;*********************************
00105  1027              INITD  =*
00106  1027  A9 02              LDA #$02        ;LENGTH OF FILENAME
00107  1029  A0 14              LDY #>INIT      ;HIGH ADDRESS OF FILENAME
00108  102B  A2 5D              LDX #<INIT      ;LOW ADDRESS OF FILENAME
00109  102D  20 BD FF           JSR SETNAM      ;SET FILE NAME
00110  1030  A9 0F              LDA #$0F        ;FILE #15
00111  1032  A2 08              LDX #$08        ;DEVICE #8
00112  1034  A0 0F              LDY #$0F        ;SECONDARY ADDRESS #15 (CM
D)






OBJ2PRG"*......PAGE 0004

LINE# LOC   CODE        LINE


00113  1036  20 BA FF           JSR SETLFS      ;SET FILE PARAMETERS
00114  1039  20 C0 FF           JSR OPEN        ;OPEN FILE
00115  103C  A9 0F              LDA #$0F        ;FILE #15
00116  103E  20 C3 FF           JSR CLOSE       ;CLOSE IT
00117  1041  20 03 13           JSR DISERR      ;LOW LEVEL CHECK DISK ERRO
R
00118  1044  90 03              BCC INITOK      ;IF C=0 NO ERRORS
00119  1046  4C 8C 12           JMP QUITER      ;DISK ERROR, QUIT
00120  1049              ;*********************************
00121  1049              ; OPEN FILE TO SCREEN
00122  1049              ;*********************************
00123  1049              INITOK =*
00124  1049  A9 03              LDA #$03        ;FILE #3
00125  104B  A2 03              LDX #$03        ;DEVICE #3
00126  104D  A0 00              LDY #$00        ;SECOND ADDRESS
00127  104F  20 BA FF           JSR SETLFS      ;SET FILE
00128  1052              ;
00129  1052  A9 00              LDA #$00        ;GET LENGTH
00130  1054  A2 00              LDX #$00        ;LOW FILENAME
00131  1056  A0 00              LDY #$00        ;HIGH FILENAME
00132  1058  20 BD FF           JSR SETNAM      ;SET FILENAME
00133  105B  20 C0 FF           JSR OPEN        ;OPEN FILE 
00134  105E  A2 03              LDX #$03        ;FILE #3
00135  1060  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00136  1063              ;*********************************
00137  1063              ; PRINT TITLE
00138  1063              ;*********************************
00139  1063  A2 2F              LDX #MSG7-MSG1  ;OFFSET FOR TITLE
00140  1065  20 BA 14           JSR PRINT       ;PRINT TITLE
00141  1068              ;*********************************
00142  1068              ; PROMPT FOR OBJ FILENAME
00143  1068              ;*********************************
00144  1068  A2 6E              LDX #MSG8-MSG1  ;OFFSET FOR MSG
00145  106A  20 BA 14           JSR PRINT       ;PRG NAME:
00146  106D              ;*********************************
00147  106D              ; READ IN INTERFACE FILE NAME
00148  106D              ;*********************************
00149  106D  20 FD 14           JSR INSTNO      ;READ STRING INTO OBUF
00150  1070              ;*********************************
00151  1070              ; APPEND ,S,R
00152  1070              ;*********************************
00153  1070  A2 00       PFILE0 LDX #$00
00154  1072  BD 5F 14    PFILE1 LDA OBJM,X
00155  1075  99 39 14           STA OUF,Y
00156  1078  C8                 INY
00157  1079  E8                 INX
00158  107A  E0 04              CPX #$04
00159  107C  D0 F4              BNE PFILE1
00160  107E  8C 67 14           STY SAVO        ; LENGTH OF FILE NAME
00161  1081              ;*********************************
00162  1081              ; OUTPUT CARRAIGE RETURN
00163  1081              ;*********************************
00164  1081  20 1B 15           JSR PRTCR       ;PRINT IT
00165  1084              ;*********************************
00166  1084              ; PROMPT FOR PRG FILENAME
00167  1084              ;*********************************






OBJ2PRG"*......PAGE 0005

LINE# LOC   CODE        LINE


00168  1084  A2 82              LDX #MSG9-MSG1  ;OFFSET FOR MSG
00169  1086  20 BA 14           JSR PRINT       ;PRG NAME:
00170  1089              ;*********************************
00171  1089              ; READ IN PRG FILE NAME
00172  1089              ;*********************************
00173  1089  20 0C 15           JSR INSTNP      ;READ STRING INTO PBUF
00174  108C              ;*********************************
00175  108C              ; APPEND ,P,W
00176  108C              ;*********************************
00177  108C  A2 00       PFILE2 LDX #$00
00178  108E  BD 63 14    PFILE3 LDA PROGM,X
00179  1091  99 4B 14           STA PUF,Y
00180  1094  C8                 INY
00181  1095  E8                 INX
00182  1096  E0 04              CPX #$04
00183  1098  D0 F4              BNE PFILE3
00184  109A  8C 68 14           STY SAVP        ; LENGTH OF FILE NAME
00185  109D              ;*********************************
00186  109D              ; SCREEN OUTPUT OPTION (VERBOSE)
00187  109D              ;*********************************
00188  109D  A9 71              LDA #<MSS1      ;LOW BYTE MESSAGE
00189  109F  A0 14              LDY #>MSS1      ;HIGH BYTE MESSAGE
00190  10A1  20 D0 14           JSR STRPNT      ;OUTPUT MESSAGE
00191  10A4  20 EE 14           JSR CRNO        ;GET KEY PRESS
00192  10A7  B0 07              BCS SOP1        ;C=0 YES C=1 NO
00193  10A9  A9 00              LDA #$00        ;ZERO
00194  10AB  8D 42 13           STA SCROPT      ;PRINT TO SCREEN
00195  10AE  F0 05              BEQ OPENOF      ;SLIP NEXT
00196  10B0  A9 01       SOP1   LDA #$01        ;ONE
00197  10B2  8D 42 13           STA SCROPT      ;NO PRINT TO SCREEN 
00198  10B5              ;*********************************
00199  10B5              ; OPEN OBJECT FILE
00200  10B5              ;*********************************
00201  10B5              OPENOF =*
00202  10B5  A9 07              LDA #$07        ;FILE #7
00203  10B7  A2 08              LDX #$08        ;DEVICE #8
00204  10B9  A0 07              LDY #$07        ;SECOND ADDRESS
00205  10BB  20 BA FF           JSR SETLFS      ;SET FILE
00206  10BE              ;
00207  10BE  AD 67 14           LDA SAVO        ;GET LENGTH
00208  10C1  A2 39              LDX #<OUF       ;LOW FILENAME
00209  10C3  A0 14              LDY #>OUF       ;HIGH FILENAME
00210  10C5  20 BD FF           JSR SETNAM      ;SET FILENAME
00211  10C8              ;
00212  10C8  20 C0 FF           JSR OPEN        ;OPEN FILE
00213  10CB              ;
00214  10CB  20 03 13           JSR DISERR
00215  10CE  90 03              BCC OBJOK
00216  10D0  4C 8C 12           JMP QUITER
00217  10D3              ;*********************************
00218  10D3              ; OPEN PROGRAM FILE
00219  10D3              ;*********************************
00220  10D3              OBJOK  =*
00221  10D3  A9 08              LDA #$08        ;FILE #7
00222  10D5  A2 08              LDX #$08        ;DEVICE #8






OBJ2PRG"*......PAGE 0006

LINE# LOC   CODE        LINE


00223  10D7  A0 08              LDY #$08        ;SECOND ADDRESS
00224  10D9  20 BA FF           JSR SETLFS      ;SET FILE
00225  10DC              ;
00226  10DC  AD 68 14           LDA SAVP        ;GET LENGTH
00227  10DF  A2 4B              LDX #<PUF       ;LOW FILENAME
00228  10E1  A0 14              LDY #>PUF       ;HIGH FILENAME
00229  10E3  20 BD FF           JSR SETNAM      ;SET FILENAME
00230  10E6  20 C0 FF           JSR OPEN        ;OPEN FILE
00231  10E9              ;
00232  10E9  20 03 13           JSR DISERR
00233  10EC  90 03              BCC PRGOK
00234  10EE  4C 8C 12           JMP QUITER
00235  10F1              ;*********************************
00236  10F1              ; SET INPUT TO OBJECT FILE
00237  10F1              ;*********************************
00238  10F1              PRGOK  =*
00239  10F1  A2 07              LDX #$07        ;FILE #7
00240  10F3  20 C6 FF           JSR CHKIN       ;INPUT FILE
00241  10F6              ;*********************************
00242  10F6              ; NEW LINE - CR
00243  10F6              ;*********************************
00244  10F6  20 1B 15           JSR PRTCR       ;OUTPUT TO SCREEN
00245  10F9              ;*********************************
00246  10F9              ; LOOP
00247  10F9              ;*********************************
00248  10F9              CKSTOP =*
00249  10F9  20 E1 FF           JSR STOP        ;CHECK STOP
00250  10FC  D0 03              BNE OK2         ;IF NOT GO ON.
00251  10FE  4C 89 12           JMP BREAK       ;BREAK ERROR
00252  1101              ;*********************************
00253  1101              ; INPUT CODE IN CBM OBJECT FORMAT
00254  1101              ;*********************************
00255  1101              ; RECORD STARTS WITH ;
00256  1101              ;*********************************
00257  1101              OK2    =*
00258  1101  20 20 15           JSR INPUT       ;INPUT CHAR
00259  1104  C9 3B              CMP #';'        ;START OF RECORD
00260  1106  F0 03              BEQ ROK         ;IF EQUAL GOOD RECORD
00261  1108  4C 86 12           JMP RERROR      ;RECORD ERROR
00262  110B  20 D2 FF    ROK    JSR CHROUT      ;OUTPUT TO SCREEN
00263  110E              ;*********************************
00264  110E              ; NEXT READ TWO DIGIT BYTE COUNT
00265  110E              ;*********************************
00266  110E  20 20 15           JSR INPUT       ;INPUT CHAR
00267  1111  8D 35 14           STA DIGIT1      ;SAVE CHAR
00268  1114  20 CF FF           JSR CHRIN       ;INPUT CHAR
00269  1117  8D 36 14           STA DIGIT2      ;SAVE CHAR
00270  111A  20 D7 12           JSR GETBYT      ;GET BYTE
00271  111D  8D 3B 13           STA NUMBYT      ;NUMBER BYTES IN RECORD
00272  1120              ;*********************************
00273  1120              ; LAST RECORD AS COUNT OF ZERO
00274  1120              ;*********************************
00275  1120  C9 00              CMP #$00        ;IF BYTE COUNT ZERO
00276  1122  D0 08              BNE GOON        ;NO THEN CONTINUE
00277  1124  A2 BE              LDX #MSG16-MSG1 ;OFFSET COUNT






OBJ2PRG"*......PAGE 0007

LINE# LOC   CODE        LINE


00278  1126  20 BA 14           JSR PRINT       ;PRINT HEADING
00279  1129  4C 8C 12           JMP QUITER      ;DONE
00280  112C              ;*********************************
00281  112C              ; PRINT NUMBER BYTES
00282  112C              ;*********************************
00283  112C              GOON   =*
00284  112C  AD 42 13           LDA SCROPT
00285  112F  D0 14              BNE SKIP1
00286  1131              ;
00287  1131  A2 95              LDX #MSG12-MSG1 ;OFFSET COUNT
00288  1133  20 BA 14           JSR PRINT       ;PRINT HEADING
00289  1136  AD 35 14           LDA DIGIT1      ;GET CHAR
00290  1139  20 D2 FF           JSR CHROUT      ;PRINT IT
00291  113C  AD 36 14           LDA DIGIT2      ;GET CHAR
00292  113F  20 D2 FF           JSR CHROUT      ;PRINT IT
00293  1142  20 1B 15           JSR PRTCR       ;PRINT CR
00294  1145              ;*********************************
00295  1145              ; INPUT RECORD ADDRESS
00296  1145              ;*********************************
00297  1145              SKIP1  =*
00298  1145  20 20 15           JSR INPUT       ;INPUT CHAR
00299  1148  8D 35 14           STA DIGIT1      ;SAVE CHAR
00300  114B  20 CF FF           JSR CHRIN       ;INPUT CHAR
00301  114E  8D 36 14           STA DIGIT2      ;SAVE CHAR
00302  1151  20 CF FF           JSR CHRIN       ;INPUT CHAR
00303  1154  8D 37 14           STA DIGIT3      ;SAVE CHAR
00304  1157  20 CF FF           JSR CHRIN       ;INPUT CHAR
00305  115A  8D 38 14           STA DIGIT4      ;SAVE CHAR
00306  115D  20 A4 12           JSR GETADD      ;GET BYTE
00307  1160  AD 3F 13           LDA STADD       ;CHECK START ADDRESS FLAG
00308  1163  D0 27              BNE SKPADD      ;IF NOT ZERO WE HAVE ALREA
DY WRITTEN ADDRESS
00309  1165              ;*********************************
00310  1165              ; ONE TIME PRINT ADDRESS TO FILE
00311  1165              ;*********************************
00312  1165  A2 08              LDX #$08        ;FILE #8
00313  1167  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00314  116A  AD 6C 14           LDA ADDLO       ;LOW BYTE ADDRESS
00315  116D  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00316  1170  AD 6B 14           LDA ADDHI       ;HIGH BYTE ADDRESS
00317  1173  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00318  1176  A2 03              LDX #$03        ;FILE #3
00319  1178  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00320  117B              ;*********************************
00321  117B              ; SAVE INITIAL PROGRAM MEMORY ADDRESS
00322  117B              ;*********************************
00323  117B  AD 6C 14           LDA ADDLO
00324  117E  8D 69 14           STA RECLO       ;RECORD ADDRESS LOW BYTE
00325  1181  AD 6B 14           LDA ADDHI
00326  1184  8D 6A 14           STA RECHI       ;RECORD ADDRESS HIGH BYTE
00327  1187              ;*********************************
00328  1187              ; SET FLAG TO SKIP PRINTING ADDRESS
00329  1187              ;*********************************
00330  1187  A9 01              LDA #$01        ;LOAD NONZERO VALUE
00331  1189  8D 3F 13           STA STADD       ;SET START ADDRESS FLAG
00332  118C              ;*********************************






OBJ2PRG"*......PAGE 0008

LINE# LOC   CODE        LINE


00333  118C              ; PRINT ADDRESS
00334  118C              ;*********************************
00335  118C              SKPADD =*
00336  118C              ;*********************************
00337  118C              ; CHECK RECORD ADDRESS TO MAKE SURE
00338  118C              ; THE OBJECT FILE IS CONTIGOUS
00339  118C              ;*********************************
00340  118C  AD 69 14           LDA RECLO
00341  118F  CD 6C 14           CMP ADDLO
00342  1192  D0 08              BNE NONC
00343  1194  AD 6A 14           LDA RECHI
00344  1197  CD 6B 14           CMP ADDHI
00345  119A  F0 08              BEQ YESC
00346  119C              NONC   = *
00347  119C  A2 CB              LDX #MSG17-MSG1 ;OFFSET ADDRESS
00348  119E  20 BA 14           JSR PRINT       ;PRINT HEADING
00349  11A1                                     ;JMP QUITER
00350  11A1  20 29 15           JSR PADIT
00351  11A4              ;*********************************
00352  11A4              ; PRINT ADDRESS
00353  11A4              ;*********************************
00354  11A4              YESC   =*
00355  11A4  AD 42 13           LDA SCROPT
00356  11A7  D0 25              BNE SKIP2
00357  11A9              ;
00358  11A9  A2 8C              LDX #MSG11-MSG1 ;OFFSET ADDRESS
00359  11AB  20 BA 14           JSR PRINT       ;PRINT HEADING
00360  11AE  AD 35 14           LDA DIGIT1      ;GET CHAR
00361  11B1  20 D2 FF           JSR CHROUT      ;PRINT IT
00362  11B4  AD 36 14           LDA DIGIT2      ;GET CHAR
00363  11B7  20 D2 FF           JSR CHROUT      ;PRINT IT
00364  11BA  AD 37 14           LDA DIGIT3      ;GET CHAR
00365  11BD  20 D2 FF           JSR CHROUT      ;PRINT IT
00366  11C0  AD 38 14           LDA DIGIT4      ;GET CHAR
00367  11C3  20 D2 FF           JSR CHROUT      ;PRINT IT
00368  11C6  20 1B 15           JSR PRTCR       ;PRINT CR
00369  11C9              ;*********************************
00370  11C9              ; PRINT BYTE DATA HEADER
00371  11C9              ;*********************************
00372  11C9  A2 9C              LDX #MSG13-MSG1 ;OFFSET BYTE DATA
00373  11CB  20 BA 14           JSR PRINT       ;PRINT HEADING
00374  11CE              ;*********************************
00375  11CE              ; INPUT RECORD
00376  11CE              ;*********************************
00377  11CE              SKIP2  =*
00378  11CE  A2 00              LDX #$00
00379  11D0  8E 3C 13           STX CURBYT
00380  11D3              ;*********************************
00381  11D3              ; INPUT RECORD BYTE DATA
00382  11D3              ;*********************************
00383  11D3              NEXTBY =*
00384  11D3  20 20 15           JSR INPUT       ;INPUT CHAR
00385  11D6  8D 35 14           STA DIGIT1      ;SAVE CHAR
00386  11D9  20 CF FF           JSR CHRIN       ;INPUT CHAR
00387  11DC  8D 36 14           STA DIGIT2      ;SAVE CHAR






OBJ2PRG"*......PAGE 0009

LINE# LOC   CODE        LINE


00388  11DF  20 D7 12           JSR GETBYT      ;GET BYTE
00389  11E2  AE 3C 13           LDX CURBYT      ;GET CURRENT BYTE COUNTER
00390  11E5  8D 6D 14           STA CURDAT      ;SAVE CURRENT BYTE
00391  11E8  9D EC 15           STA DATA,X      ;SAVE BYTE IN RECORD BUFFE
R
00392  11EB              ;*********************************
00393  11EB              ; PRINT BYTE TO FILE 
00394  11EB              ;*********************************
00395  11EB  20 CC FF           JSR CLRCHN      ;RESET I/O 
00396  11EE  A2 08              LDX #$08        ;FILE #8
00397  11F0  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00398  11F3  AD 6D 14           LDA CURDAT      ;DATA BYTE
00399  11F6  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00400  11F9  20 CC FF           JSR CLRCHN      ;RESET I/O 
00401  11FC  A2 03              LDX #$03        ;FILE #3
00402  11FE  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00403  1201              ;*********************************
00404  1201              ; PRINT BYTE TO SCREEN 
00405  1201              ;*********************************
00406  1201  AD 42 13           LDA SCROPT
00407  1204  D0 11              BNE SKIP3
00408  1206              ;
00409  1206  AD 35 14           LDA DIGIT1
00410  1209  20 D2 FF           JSR CHROUT
00411  120C  AD 36 14           LDA DIGIT2
00412  120F  20 D2 FF           JSR CHROUT
00413  1212  A9 20              LDA #' '
00414  1214  20 D2 FF           JSR CHROUT 
00415  1217              ;
00416  1217              SKIP3  =*
00417  1217  AE 3C 13           LDX CURBYT
00418  121A  E8                 INX
00419  121B  8E 3C 13           STX CURBYT
00420  121E  EC 3B 13           CPX NUMBYT
00421  1221  D0 B0              BNE NEXTBY
00422  1223              ;*********************************
00423  1223              ; INPUT RECORD CHECKSUM
00424  1223              ;*********************************
00425  1223  20 20 15           JSR INPUT       ;INPUT CHAR
00426  1226  8D 35 14           STA DIGIT1      ;SAVE CHAR
00427  1229  20 CF FF           JSR CHRIN       ;INPUT CHAR
00428  122C  8D 36 14           STA DIGIT2      ;SAVE CHAR
00429  122F  20 CF FF           JSR CHRIN       ;INPUT CHAR
00430  1232  8D 37 14           STA DIGIT3      ;SAVE CHAR
00431  1235  20 CF FF           JSR CHRIN       ;INPUT CHAR
00432  1238  8D 38 14           STA DIGIT4      ;SAVE CHAR
00433  123B  20 A4 12           JSR GETADD      ;CONVERT TO WORD
00434  123E              ;*********************************
00435  123E              ; PRINT 4 BYTE CHECKSUM
00436  123E              ;*********************************
00437  123E  AD 42 13           LDA SCROPT
00438  1241  D0 1D              BNE SKIP4
00439  1243              ;
00440  1243  A2 A7              LDX #MSG14-MSG1 ;OFFSET ADDRESS
00441  1245  20 BA 14           JSR PRINT       ;PRINT HEADING
00442  1248  AD 35 14           LDA DIGIT1






OBJ2PRG"*......PAGE 0010

LINE# LOC   CODE        LINE


00443  124B  20 D2 FF           JSR CHROUT
00444  124E  AD 36 14           LDA DIGIT2
00445  1251  20 D2 FF           JSR CHROUT
00446  1254  AD 37 14           LDA DIGIT3
00447  1257  20 D2 FF           JSR CHROUT
00448  125A  AD 38 14           LDA DIGIT4
00449  125D  20 D2 FF           JSR CHROUT
00450  1260              ;*********************************
00451  1260              ; READ AND PRINT RECORD END CR
00452  1260              ;*********************************
00453  1260              SKIP4  =*
00454  1260  20 20 15           JSR INPUT       ;INPUT CHAR
00455  1263  AD 42 13           LDA SCROPT
00456  1266  D0 06              BNE SKIP5
00457  1268  20 D2 FF           JSR CHROUT      ;PRINT IT
00458  126B              ;*********************************
00459  126B              ; NEXT LINE ON DISPLAY
00460  126B              ;*********************************
00461  126B  20 1B 15           JSR PRTCR       ;PRINT CR
00462  126E              ;*********************************
00463  126E              ; NEXT RECORD
00464  126E              ;*********************************
00465  126E              SKIP5  =*
00466  126E              ;*********************************
00467  126E              ; ADVANCE RECORD ADDRESS BY NUMBER BYTES
00468  126E              ; READ IN TO CHECK NEXT RECORD
00469  126E              ; FOR CONTIGUOUS MEMORY
00470  126E              ;*********************************
00471  126E  18                 CLC
00472  126F  AD 3B 13           LDA NUMBYT
00473  1272  6D 69 14           ADC RECLO
00474  1275  8D 69 14           STA RECLO
00475  1278  A9 00              LDA #$00
00476  127A  6D 6A 14           ADC RECHI
00477  127D  8D 6A 14           STA RECHI
00478  1280              ;*********************************
00479  1280              ; NEXT RECORD
00480  1280              ;*********************************
00481  1280  4C F9 10           JMP CKSTOP      ;NEXT RECORD
00482  1283              ;*********************************
00483  1283              ; ERRORS
00484  1283              ;*********************************
00485  1283              ; PADDING NEGATIVE ERROR
00486  1283              ;*********************************
00487  1283              PADERR =*
00488  1283  A2 09              LDX #MSG4-MSG1  ;OFFSET ADDRESS
00489  1285  2C                 .BYTE $2C       ;BIT TRICK TO SKIP
00490  1286              ;*********************************
00491  1286              ;RECORD ERROR
00492  1286              ;*********************************
00493  1286              RERROR =*
00494  1286  A2 09              LDX #MSG4-MSG1  ;OFFSET FOR MSG
00495  1288  2C                 .BYTE $2C       ;BIT TRICK TO SKIP
00496  1289              ;*********************************
00497  1289              ; BREAK MESSAGE - STOP KEY PRESSED






OBJ2PRG"*......PAGE 0011

LINE# LOC   CODE        LINE


00498  1289              ;*********************************
00499  1289              BREAK  =* 
00500  1289  A2 02              LDX #MSG2-MSG1  ;BREAK ERROR
00501  128B  2C                 .BYTE $2C       ;BIT TRICK TO SKIP
00502  128C              ;*********************************
00503  128C              ; END OF RECORDS - CLOSE OUT
00504  128C              ;*********************************
00505  128C              QUITER =*
00506  128C  A2 B1              LDX #MSG15-MSG1 ;END OF FILE
00507  128E              ;*********************************
00508  128E              ; OUTPUT MESSAGE TO SCREEN
00509  128E              ;*********************************
00510  128E  20 BA 14           JSR PRINT       ;PRINT HEADING
00511  1291              ;*********************************
00512  1291              ; CLOSE OUT FILE AND RESET I/O
00513  1291              ;*********************************
00514  1291  A9 03              LDA #$03        ;FILE #7
00515  1293  20 C3 FF           JSR CLOSE       ;CLOSE
00516  1296  A9 07              LDA #$07        ;FILE #7
00517  1298  20 C3 FF           JSR CLOSE       ;CLOSE
00518  129B  A9 08              LDA #$08        ;FILE #7
00519  129D  20 C3 FF           JSR CLOSE       ;CLOSE
00520  12A0  20 CC FF           JSR CLRCHN      ;RESET I/O 
00521  12A3  60                 RTS             ;BACK TO BASIC
00522  12A4              ;*********************************
00523  12A4              ; INPUT CHARACTER INTO BYTE
00524  12A4              ; CREATE BYTE FORM 2 ASCII CHARS
00525  12A4              ;*********************************
00526  12A4              GETADD =*
00527  12A4  AD 35 14           LDA DIGIT1
00528  12A7  20 EE 12           JSR BYTASC      ;GET HIGH NIBBLE
00529  12AA  0A                 ASL A           ;LEFT JUSTIFY
00530  12AB  0A                 ASL A           ; ASCII CHAR
00531  12AC  0A                 ASL A           ;  IN HIGH
00532  12AD  0A                 ASL A           ;   NIBBLE
00533  12AE  8D 41 13           STA TEMP        ;STORE
00534  12B1  AD 36 14           LDA DIGIT2      ;INPUT CHAR
00535  12B4  20 EE 12           JSR BYTASC      ;CREATE LOW NIB
00536  12B7  0D 41 13           ORA TEMP         ;PUT IN PLACE
00537  12BA  8D 6B 14           STA ADDHI        ;HIGH NIBBLE
00538  12BD              ;
00539  12BD  AD 37 14           LDA DIGIT3
00540  12C0  20 EE 12           JSR BYTASC      ;GET HIGH NIBBLE
00541  12C3  0A                 ASL A           ;LEFT JUSTIFY
00542  12C4  0A                 ASL A           ; ASCII CHAR
00543  12C5  0A                 ASL A           ;  IN HIGH
00544  12C6  0A                 ASL A           ;   NIBBLE
00545  12C7  8D 41 13           STA TEMP        ;STORE
00546  12CA  AD 38 14           LDA DIGIT4      ;INPUT CHAR
00547  12CD  20 EE 12           JSR BYTASC      ;CREATE LOW NIB
00548  12D0  0D 41 13           ORA TEMP        ;PUT IN PLACE
00549  12D3  8D 6C 14           STA ADDLO       ;LO NIBBLE
00550  12D6              ;
00551  12D6  60                 RTS             ;RETURN
00552  12D7              ;*********************************






OBJ2PRG"*......PAGE 0012

LINE# LOC   CODE        LINE


00553  12D7              ; INPUT CHARACTER INTO BYTE
00554  12D7              ; CREATE BYTE FORM 2 ASCII CHARS
00555  12D7              ;*********************************
00556  12D7              GETBYT =*
00557  12D7  AD 35 14           LDA DIGIT1
00558  12DA  20 EE 12           JSR BYTASC      ;GET HIGH NIBBLE
00559  12DD  0A                 ASL A           ;LEFT JUSTIFY
00560  12DE  0A                 ASL A           ; ASCII CHAR
00561  12DF  0A                 ASL A           ;  IN HIGH
00562  12E0  0A                 ASL A           ;   NIBBLE
00563  12E1  8D 41 13           STA TEMP        ;STORE
00564  12E4  AD 36 14           LDA DIGIT2      ;INPUT CHAR
00565  12E7  20 EE 12           JSR BYTASC      ;CREATE LOW NIB
00566  12EA  0D 41 13           ORA TEMP        ;PUT IN PLACE
00567  12ED  60                 RTS             ;RETURN
00568  12EE              ;*********************************
00569  12EE              ; CONVERT ASCII TO BYTE DATA
00570  12EE              ;*********************************
00571  12EE  C9 3A       BYTASC CMP #$3A        ;IS CHAR >9
00572  12F0  08                 PHP             ;PUSH P
00573  12F1  29 0F              AND #$0F        ;MASK HIGH BYTE
00574  12F3  28                 PLP             ;PULL P
00575  12F4  90 02              BCC EXIT1       ;IF <=9 OK
00576  12F6  69 08              ADC #$08        ;ADD OFFSET
00577  12F8  60          EXIT1  RTS             ;RETURN
00578  12F9              ;*********************************
00579  12F9              ; CONVERT BYTE TO ASCII CHAR
00580  12F9              ;*********************************
00581  12F9  18          CHGASC CLC             ;CLEAR CARRY
00582  12FA  69 F6              ADC #$F6        ;ADD OFFSET
00583  12FC  90 02              BCC NOSIX       ;IF C=0 OK
00584  12FE  69 06              ADC #$06        ;ADD OFFSSET
00585  1300  69 3A       NOSIX  ADC #$3A        ;ADD OFFSET
00586  1302  60                 RTS             ;RETURN
00587  1303              ;*********************************
00588  1303              ;  DISK ERROR CHECK
00589  1303              ;*********************************
00590  1303  A9 08       DISERR LDA #$08        ;DEV #8
00591  1305  85 BA              STA FA          ;PUT IN DEV TABLE
00592  1307  20 B4 FF           JSR TALK        ;SEND TALK
00593  130A  A9 6F              LDA #$6F        ;SECONDARY ADDRESS
00594  130C  85 B9              STA SA          ;PUT IN TABLE
00595  130E  20 96 FF           JSR TALKSA      ;SEND SEC
00596  1311  20 A5 FF           JSR IECIN       ;GET FIRST BYTE
00597  1314  C9 30              CMP #'0'        ;IS IT A ZERO
00598  1316  D0 0C              BNE DLOOC       ;IF NOT ZERO ERROR
00599  1318  20 A5 FF    DLOOE  JSR IECIN       ;GET BYTE
00600  131B  C9 0D              CMP #$0D        ;IS IT CR?
00601  131D  D0 F9              BNE DLOOE       ;GET NEXT BYTE
00602  131F  20 AB FF           JSR UNTALK      ;UNTALK
00603  1322  18                 CLC             ;NO ERROR FLAG
00604  1323  60                 RTS             ;RETURN
00605  1324              ;*********************************
00606  1324              ; PRINT DISK ERROR
00607  1324              ;*********************************






OBJ2PRG"*......PAGE 0013

LINE# LOC   CODE        LINE


00608  1324  48          DLOOC  PHA             ;STACK BYTE
00609  1325  20 1B 15           JSR PRTCR       ;PRINT CR
00610  1328  68                 PLA             ;GET BYTE
00611  1329  20 D2 FF           JSR CHROUT      ;PRINT IT
00612  132C  20 A5 FF    DLOOA  JSR IECIN       ;GET NEXT BYTE
00613  132F  20 D2 FF           JSR CHROUT      ;PRINT IT
00614  1332  C9 0D              CMP #$0D        ;IS IT CR
00615  1334  D0 F6              BNE DLOOA       ;GET NEXT BYTE
00616  1336  20 AB FF           JSR UNTALK      ;UNTALK
00617  1339  38                 SEC             ;SET ERROR FLAG
00618  133A  60                 RTS             ;RETURN
00619  133B              ;*********************************
00620  133B              ; STORAGE
00621  133B              ;*********************************
00622  133B  AA          NUMBYT .BYTE $AA       ;NUMBER BYTES
00623  133C  AA          CURBYT .BYTE $AA       ;CURRENT BYTE IN RECORD
00624  133D  AA AA       RECORD .WORD $AAAA     ;RECORD NUMBER
00625  133F  AA          STADD  .BYTE $AA       ;START ADDRESS
00626  1340  AA          COUNT  .BYTE $AA       ;COUNTER
00627  1341  AA          TEMP   .BYTE $AA       ;TEMPOARY
00628  1342  AA          SCROPT .BYTE $AA       ;SCREEN OUPUT OPTION
00629  1343              ;*********************************
00630  1343  AA          COUNT1 .BYTE $AA       ;COUNTER
00631  1344              ;*********************************
00632  1344              ; ERROR MESSAGES
00633  1344              ;*********************************
00634  1344  0D          MSG1   .BYTE $0D,$8D
00634  1345  8D 
00635  1346  0D          MSG2   .BYTE $0D
00636  1347  42 52       .BYTE  'BREAK',$8D
00636  134C  8D 
00637  134D  0D          MSG4   .BYTE $0D
00638  134E  42 41       .BYTE  'BAD RECORD',$8D
00638  1358  8D 
00639  1359  0D          MSG5   .BYTE $0D
00640  135A  43 48       .BYTE  'CHECKSUM ERRO',$D2
00640  1367  D2 
00641  1368  0D          MSG6   .BYTE $0D
00642  1369  46 49       .BYTE  'FILE ERRO',$D2
00642  1372  D2 
00643  1373              ;*********************************
00644  1373              ; MESSAGES
00645  1373              ;*********************************
00646  1373  0D          MSG7   .BYTE $0D,$0D,$0D
00646  1374  0D 
00646  1375  0D 
00647  1376  4F 42       .BYTE  'OBJ2PRG.C64 V072882'
00648  1389  0D          .BYTE  $0D
00649  138A  28 43       .BYTE  '(C) 1982 BY COMMODORE BUSINESS '
00650  13A9  4D 41       .BYTE  'MACHINES'
00651  13B1  A0          .BYTE  $A0
00652  13B2  0D          MSG8   .BYTE $0D
00653  13B3  4F 42       .BYTE  'OBJECT FILE NAME ?',$A0
00653  13C5  A0 
00654  13C6  0D          MSG9   .BYTE $0D






OBJ2PRG"*......PAGE 0014

LINE# LOC   CODE        LINE


00655  13C7  50 52       .BYTE  'PRG NAME',$BA
00655  13CF  BA 
00656  13D0  0D          MSG11  .BYTE $0D
00657  13D1  41 44       .BYTE  'ADDRESS',$A0
00657  13D8  A0 
00658  13D9  0D          MSG12  .BYTE $0D
00659  13DA  43 4F       .BYTE  'COUNT',$A0
00659  13DF  A0 
00660  13E0  0D          MSG13  .BYTE $0D
00661  13E1  42 59       .BYTE  'BYTE DATA',$8D
00661  13EA  8D 
00662  13EB  0D          MSG14  .BYTE $0D
00663  13EC  43 48       .BYTE  'CHECKSUM',$A0
00663  13F4  A0 
00664  13F5  0D          MSG15  .BYTE $0D
00665  13F6  45 4E       .BYTE  'END OF FILE',$8D
00665  1401  8D 
00666  1402  0D          MSG16  .BYTE $0D
00667  1403  4C 41       .BYTE  'LAST RECORD',$8D
00667  140E  8D 
00668  140F  0D          MSG17  .BYTE $0D
00669  1410  46 49       .BYTE  'FILE IS NON CONTIGUOUS',$8D
00669  1426  8D 
00670  1427  0D          MSG18  .BYTE $0D
00671  1428  50 41       .BYTE  'PADDING FILE',$8D
00671  1434  8D 
00672  1435              ;*********************************
00673  1435              ; HEX DIGITS
00674  1435              ;*********************************
00675  1435  AA          DIGIT1 .BYTE $AA
00676  1436  AA          DIGIT2 .BYTE $AA
00677  1437  AA          DIGIT3 .BYTE $AA
00678  1438  AA          DIGIT4 .BYTE $AA
00679  1439              ;*********************************
00680  1439              ; FILENAME NAME BUFFER
00681  1439              ;*********************************
00682  1439  AA          OUF    .BYTE $AA,$AA,$AA,$AA,$AA,$AA
00682  143A  AA 
00682  143B  AA 
00682  143C  AA 
00682  143D  AA 
00682  143E  AA 
00683  143F  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00683  1440  AA 
00683  1441  AA 
00683  1442  AA 
00683  1443  AA 
00683  1444  AA 
00684  1445  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00684  1446  AA 
00684  1447  AA 
00684  1448  AA 
00684  1449  AA 
00684  144A  AA 
00685  144B              ;*********************************






OBJ2PRG"*......PAGE 0015

LINE# LOC   CODE        LINE


00686  144B              ; FILENAME NAME BUFFER
00687  144B              ;*********************************
00688  144B  AA          PUF    .BYTE $AA,$AA,$AA,$AA,$AA,$AA
00688  144C  AA 
00688  144D  AA 
00688  144E  AA 
00688  144F  AA 
00688  1450  AA 
00689  1451  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00689  1452  AA 
00689  1453  AA 
00689  1454  AA 
00689  1455  AA 
00689  1456  AA 
00690  1457  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00690  1458  AA 
00690  1459  AA 
00690  145A  AA 
00690  145B  AA 
00690  145C  AA 
00691  145D              ;*********************************
00692  145D              ; INIT DISK
00693  145D              ;*********************************
00694  145D  49 30       INIT   .BYTE 'I0'
00695  145F              ;*********************************
00696  145F  2C 53       OBJM   .BYTE ',S,R'
00697  1463              ;*********************************
00698  1463  2C 50       PROGM  .BYTE ',P,W'
00699  1467              ;*********************************
00700  1467  AA          SAVO   .BYTE $AA
00701  1468  AA          SAVP   .BYTE $AA
00702  1469              ;*********************************
00703  1469              ; CURRENT RECORD ADDRESS
00704  1469              ;*********************************
00705  1469  AA          RECLO  .BYTE $AA
00706  146A  AA          RECHI  .BYTE $AA
00707  146B              ;*********************************
00708  146B              ; CURRENT ADDRESS AND DATA
00709  146B              ;*********************************
00710  146B  AA          ADDHI  .BYTE $AA
00711  146C  AA          ADDLO  .BYTE $AA
00712  146D  AA          CURDAT .BYTE $AA
00713  146E              ;*********************************
00714  146E              ; PADDING BYTES FOR NON-CONTIGUOS FILE
00715  146E              ;*********************************
00716  146E  00 00       NUMPAD .WORD $0000
00717  1470  AA          PADBYT .BYTE $AA
00718  1471              ;*********************************
00719  1471              ; OUTPUT TO SCREEN OPTION
00720  1471              ;*********************************
00721  1471  0D          MSS1   .BYTE $0D
00722  1472  4F 55              .BYTE 'OUTPUT TO SCREEN (Y OR N/CR)? '
00723  1490  00                 .BYTE 0
00724  1491              ;*********************************
00725  1491              ; PADDING ERROR






OBJ2PRG"*......PAGE 0016

LINE# LOC   CODE        LINE


00726  1491              ;*********************************
00727  1491  0D          MSE1   .BYTE $0D
00728  1492  50 41       .BYTE  'PADDING NEGATIVE - PRG '
00729  14A9  46 49       .BYTE  'FILE INCOMPLETE',$0D
00729  14B8  0D 
00730  14B9  00          .BYTE  0
00731  14BA              ;*********************************
00732  14BA              ; OUTPUT STRING ROUTINE
00733  14BA              ;*********************************
00734  14BA  8E 40 13    PRINT  STX COUNT       ;PUT X IN COUNT
00735  14BD  AE 40 13    PLOOP  LDX COUNT       ;LOAD X FROM COUNT
00736  14C0  BD 44 13           LDA MSG1,X      ;LOAD CHAR
00737  14C3  08                 PHP             ;SAVE STATUS FLAG
00738  14C4  29 7F              AND #$7F        ;MASK BIT 8
00739  14C6  20 D2 FF           JSR CHROUT      ;PRINT CHAR
00740  14C9  EE 40 13           INC COUNT       ;INC OFFSET
00741  14CC  28                 PLP             ;GET STATUS FLAG
00742  14CD  10 EE              BPL PLOOP       ;IF BIT 8 ZERO
00743  14CF  60                 RTS             ;RETURN
00744  14D0              ;*********************************
00745  14D0              ; OUTPUT UTILITIES
00746  14D0              ;*********************************
00747  14D0              ; STRING OUTPUT ROUTINE
00748  14D0              ;*********************************
00749  14D0  85 FD       STRPNT STA ZEROUR      ;POINTER TO
00750  14D2  84 FE              STY ZEROUR+1    ;MESSAGE
00751  14D4  A0 00              LDY #$00        ;OFFSET
00752  14D6  B1 FD       SOUT   LDA (ZEROUR),Y  ;GET CHAR
00753  14D8  F0 06              BEQ SEXIT       ;IF ZERO EXIT
00754  14DA  20 D2 FF           JSR CHROUT      ;PRINT
00755  14DD  C8                 INY             ;INC OFFSET
00756  14DE  D0 F6              BNE SOUT        ;LOOP
00757  14E0  60          SEXIT  RTS             ;RETURN
00758  14E1              ;*********************************
00759  14E1              ; INPUT UTILITIES
00760  14E1              ;*********************************
00761  14E1              ; GET OPTION (CR/Y OR N): Y=C=0
00762  14E1              ;*********************************
00763  14E1  20 CF FF    CRYS   JSR CHRIN
00764  14E4  C9 59              CMP #'Y'
00765  14E6  F0 11              BEQ CRYS1
00766  14E8  C9 0D              CMP #$0D
00767  14EA  F0 0D              BEQ CRYS1
00768  14EC  D0 0D              BNE CRNO1
00769  14EE              ;*********************************
00770  14EE              ; GET OPTION (Y OR CR/N): Y=C=0
00771  14EE              ;*********************************
00772  14EE  20 CF FF    CRNO   JSR CHRIN
00773  14F1  C9 4E              CMP #'N'
00774  14F3  F0 06              BEQ CRNO1
00775  14F5  C9 0D              CMP #$0D
00776  14F7  F0 02              BEQ CRNO1
00777  14F9  18          CRYS1  CLC
00778  14FA  60                 RTS
00779  14FB  38          CRNO1  SEC






OBJ2PRG"*......PAGE 0017

LINE# LOC   CODE        LINE


00780  14FC  60                 RTS
00781  14FD              ;*********************************
00782  14FD              ; INPUT STRING ROUTINE
00783  14FD              ;*********************************
00784  14FD  A0 00       INSTNO LDY #$00
00785  14FF  20 CF FF    INSTN1 JSR CHRIN
00786  1502  99 39 14           STA OUF,Y
00787  1505  C8                 INY
00788  1506  C9 0D              CMP #$0D
00789  1508  D0 F5              BNE INSTN1
00790  150A  88                 DEY
00791  150B  60                 RTS
00792  150C              ;*********************************
00793  150C              ; INPUT STRING ROUTINE
00794  150C              ;*********************************
00795  150C  A0 00       INSTNP LDY #$00
00796  150E  20 CF FF    INSTN2 JSR CHRIN
00797  1511  99 4B 14           STA PUF,Y
00798  1514  C8                 INY
00799  1515  C9 0D              CMP #$0D
00800  1517  D0 F5              BNE INSTN2
00801  1519  88                 DEY
00802  151A  60                 RTS
00803  151B              ;*********************************
00804  151B              ; OUTPUT CARRAIGE RETURN
00805  151B              ;*********************************
00806  151B  A9 0D       PRTCR  LDA #$0D        ;ASCII CR
00807  151D  4C D2 FF           JMP CHROUT      ;PRINT IT
00808  1520              ;*********************************
00809  1520              ; 
00810  1520              ;*********************************
00811  1520              INPUT  = *
00812  1520  A2 07              LDX #$07        ;FILE #7
00813  1522  20 C6 FF           JSR CHKIN       ;INPUT FILE
00814  1525  20 CF FF           JSR CHRIN       ;INPUT CHAR
00815  1528  60                 RTS
00816  1529              ;*********************************
00817  1529              ; OBJECT FILE IN NON-CONTIGUOUS
00818  1529              ; PAD PROGRAM FILE AS REQUIRE 
00819  1529              ;*********************************
00820  1529              PADIT  =*
00821  1529  A2 E3              LDX #MSG18-MSG1 ;OFFSET ADDRESS
00822  152B  20 BA 14           JSR PRINT       ;PRINT HEADING
00823  152E              ;
00824  152E              ; CALUCLTE NUMBER OF BYTES TO PAD
00825  152E              ;
00826  152E  38                 SEC             ;SUBTRACK
00827  152F  AD 6C 14           LDA ADDLO       ;EXPECTED ADDRESS
00828  1532  ED 69 14           SBC RECLO       ;FROM RECORD
00829  1535  8D 6E 14           STA NUMPAD      ;ADDRESS TO
00830  1538  AD 6B 14           LDA ADDHI       ;DETERMINE
00831  153B  ED 6A 14           SBC RECHI       ;NUMBER OF BYTES
00832  153E  8D 6F 14           STA NUMPAD+1    ;TO PAD
00833  1541              ;
00834  1541              ; CHECK FOR NUMBER BYTES TO PAD NEGATIVE






OBJ2PRG"*......PAGE 0018

LINE# LOC   CODE        LINE


00835  1541              ; THIS CAN HAPPEN IS RECORD ADDRESS IN LESS
00836  1541              ; THAN THE PREVIOUS ADDRESS RATHER THAN MORE
00837  1541              ; THE COMMODORE ASSEMBLER ALLOWS THESE KID OF
00838  1541              ; RECORDS TO BE CREATED AND THE LOADER PROGRAM
00839  1541              ; WILL JUST LOAD MEMORY ASS REQUIRED REGRADLESS
00840  1541              ; OF ITS SEQUENCE, BUT SINCE WE ARE BUILING A
00841  1541              ; CONTINUIOS PROGRAM FILE THAT FILES MEMORY FROM
00842  1541              ; THE START ADDRESS IN A LINEAR FASHION TO THE
00843  1541              ; END OF THE FILE, THERE IS NO WAY TO HANDLE THIS

00844  1541              ; CONDITION SO WE ABORT (FOR NOW - POSSIBLE IN
00845  1541              ; FUTURE THAT WE JUST IGNORE THIS RECORD AND WAIT

00846  1541              ; UNTIL ONE AHEAD IN MEMORY IS FOUND, BUT THIS MI
GHT
00847  1541              ; LEAD TO OTHER ISSUES SUCH AS ITITLAIZED MEMORY 
THAT
00848  1541              ; IS NOT INCLUDED IN THE PRG FILE
00849  1541              ;
00850  1541              ; SIMPLE TEST. IF THE CARRY BIT IS STILL SET
00851  1541              ; THE SUBTRACTION LEAD TO A BARROW WHICH MEANS
00852  1541              ; THE NUMBER OF PADDING BYTE IS GREATER THAN
00853  1541              ; $FFFF AND HENCE IS NEGATIVE
00854  1541              ;
00855  1541                                     ;BCC DECPAD
00856  1541  B0 0C              BCS DECPAD
00857  1543  A9 91              LDA #<MSE1      ;LOW BYTE MESSAGE
00858  1545  A0 14              LDY #>MSE1      ;HIGH BYTE MESSAGE
00859  1547  20 D0 14           JSR STRPNT      ;OUTPUT MESSAGE
00860  154A              ;
00861  154A  68                 PLA             ;PULL RETURN ADDRESS OFF S
TACK
00862  154B  68                 PLA             ;SO RTS IN ERROR ROUTINE I
S TO
00863  154C                                     ;BASIC AND NOT CALLER OF T
HIS
00864  154C                                     ;ROUTINE
00865  154C  4C 83 12           JMP PADERR
00866  154F              ;
00867  154F              ; DECREMENT PADDING BY ONE BYTE
00868  154F              ;
00869  154F              DECPAD =*
00870  154F  AD 6E 14           LDA NUMPAD
00871  1552  D0 03              BNE DECPA1
00872  1554  CE 6F 14           DEC NUMPAD+1
00873  1557  CE 6E 14    DECPA1 DEC NUMPAD
00874  155A              ;
00875  155A              ; PRINT NUMBER OF BYTES TO PAD
00876  155A              ;
00877  155A  AC 6F 14           LDY NUMPAD+1    ;PRINT NUMBER
00878  155D  AD 6E 14           LDA NUMPAD      ;OF PADDING
00879  1560  20 C0 15           JSR PRBYTS      ;BYTES
00880  1563  20 1B 15           JSR PRTCR       ;NEW LINE
00881  1566              ;
00882  1566              ; CALCUALTE NEXT RECORD ADDRESS
00883  1566              ; AFTER PADDING
00884  1566              ;
00885  1566  18                 CLC             ;ADD NUMBER OF
00886  1567  AD 69 14           LDA RECLO       ;PADDED BYTES
00887  156A  6D 6E 14           ADC NUMPAD      ;TO PREVIOUS RECORD
00888  156D  8D 69 14           STA RECLO       ;ADDRESS FOR NEXT
00889  1570  AD 6A 14           LDA RECLO+1     ;RECORD CHECK






OBJ2PRG"*......PAGE 0019

LINE# LOC   CODE        LINE


00890  1573  6D 6F 14           ADC NUMPAD+1    ;
00891  1576  8D 6A 14           STA RECLO+1     ;
00892  1579              ;
00893  1579  18                 CLC             ;INCREMENT
00894  157A  AD 69 14           LDA RECLO       ;ADDRESS
00895  157D  69 01              ADC #$01        ;BY ONE
00896  157F  8D 69 14           STA RECLO       ;TO ADVANCE PAST
00897  1582  AD 6A 14           LDA RECLO+1     ;PADDING TO NEXT
00898  1585  69 00              ADC #$00        ;ACTIVE ADDRESS
00899  1587  8D 6A 14           STA RECLO+1     ;
00900  158A              ;
00901  158A              ; PRINT WAHT NEXT RECORD ADDRESS SHOULD BE
00902  158A              ;
00903  158A  AC 6A 14           LDY RECLO+1     ;PRINT WHAT
00904  158D  AD 69 14           LDA RECLO       ;NEXT RECORD
00905  1590  20 C0 15           JSR PRBYTS      ;ADDRESS SHOULD BE
00906  1593  20 1B 15           JSR PRTCR       ;NEW LINE
00907  1596              ;
00908  1596  20 CC FF           JSR CLRCHN      ;RESET I/O 
00909  1599  A2 08              LDX #$08        ;FILE #8
00910  159B  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00911  159E              ;
00912  159E              ; WTITE OUT PADDING BYTES TO PRG FILE
00913  159E              ;
00914  159E              PADIT1 =*
00915  159E  AD 70 14           LDA PADBYT      ;PADDING BYTE
00916  15A1  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00917  15A4              ;
00918  15A4  AD 6E 14           LDA NUMPAD
00919  15A7  D0 08              BNE PADIT2
00920  15A9  AD 6F 14           LDA NUMPAD+1
00921  15AC  F0 09              BEQ PADIT3      ;KICKS IT OUT WHEN BOTH AR
E 0
00922  15AE  CE 6F 14           DEC NUMPAD+1
00923  15B1  CE 6E 14    PADIT2 DEC NUMPAD
00924  15B4  18                 CLC
00925  15B5  90 E7              BCC PADIT1
00926  15B7              ;
00927  15B7              ; RESET I/O AND WE ARE DONE
00928  15B7              ; GO BACK AND HANDEL THE NON
00929  15B7              ; CONTIGUIS RECORD THAT GOT US HERE
00930  15B7              ;
00931  15B7              PADIT3 =*
00932  15B7              ;
00933  15B7  20 CC FF           JSR CLRCHN      ;RESET I/O 
00934  15BA  A2 03              LDX #$03        ;FILE #3
00935  15BC  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00936  15BF              ;
00937  15BF  60                 RTS
00938  15C0              ;*********************************
00939  15C0              ; PRINT UTILITES
00940  15C0              ;*********************************
00941  15C0              ; PRINT WORD MSB IN Y LSB IN A
00942  15C0              ;*********************************
00943  15C0  48          PRBYTS PHA             ;PUT A ON STACK
00944  15C1  98                 TYA             ;PUT HIH BYTE IN A






OBJ2PRG"*......PAGE 0020

LINE# LOC   CODE        LINE


00945  15C2  20 C6 15           JSR PRBYT       ;PRINT MSB
00946  15C5  68                 PLA             ;GET LSB
00947  15C6              ;*********************************
00948  15C6              ; PRINT BYTE IN A
00949  15C6              ;*********************************
00950  15C6  48          PRBYT  PHA             ;PUT BYTE ON STACK
00951  15C7  4A                 LSR A           ;4 RIGHT SHIFTS
00952  15C8  4A                 LSR A           ;TO MOVE HIGH
00953  15C9  4A                 LSR A           ;NIBBLE TO LOW
00954  15CA  4A                 LSR A           ;NIB WITH HIGH 0'S
00955  15CB  A8                 TAY             ;USE AS POINTER
00956  15CC  B9 DC 15           LDA HEXA,Y      ;GET ASCII
00957  15CF  20 D2 FF           JSR CHROUT      ;PRINT
00958  15D2  68                 PLA             ;PULL BYTE OUT
00959  15D3  29 0F              AND #$0F        ;MASK HIGH NIBBLE
00960  15D5  A8                 TAY             ;USE AS POINTER
00961  15D6  B9 DC 15           LDA HEXA,Y      ;GET ASCII
00962  15D9  4C D2 FF           JMP CHROUT      ;PRINT
00963  15DC              ;*********************************
00964  15DC              ; HEX-TO-ASCII TABLE
00965  15DC              ;*********************************
00966  15DC  30 31       HEXA   .BYTE '0123456789ABCDEF'
00967  15EC              ;*********************************
00968  15EC              ; CURRENT RECORD HOLDING BUFFER
00969  15EC              ;*********************************
00970  15EC  AA          DATA   .BYTE $AA,$AA,$AA,$AA,$AA,$AA
00970  15ED  AA 
00970  15EE  AA 
00970  15EF  AA 
00970  15F0  AA 
00970  15F1  AA 
00971  15F2  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00971  15F3  AA 
00971  15F4  AA 
00971  15F5  AA 
00971  15F6  AA 
00971  15F7  AA 
00972  15F8  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00972  15F9  AA 
00972  15FA  AA 
00972  15FB  AA 
00972  15FC  AA 
00972  15FD  AA 
00973  15FE  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00973  15FF  AA 
00973  1600  AA 
00973  1601  AA 
00973  1602  AA 
00973  1603  AA 
00974  1604  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00974  1605  AA 
00974  1606  AA 
00974  1607  AA 
00974  1608  AA 
00974  1609  AA 






OBJ2PRG"*......PAGE 0021

LINE# LOC   CODE        LINE


00975  160A  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00975  160B  AA 
00975  160C  AA 
00975  160D  AA 
00975  160E  AA 
00975  160F  AA 
00976  1610  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00976  1611  AA 
00976  1612  AA 
00976  1613  AA 
00976  1614  AA 
00976  1615  AA 
00977  1616  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00977  1617  AA 
00977  1618  AA 
00977  1619  AA 
00977  161A  AA 
00977  161B  AA 
00978  161C              ;*********************************;
00979  161C              .END


ERRORS = 00000


SYMBOL TABLE

SYMBOL VALUE
 ADDHI    146B    ADDLO    146C    BASIC    100D    BREAK    1289
 BSTUB    0001    BYTASC   12EE    CHGASC   12F9    CHKIN    FFC6
 CHKOUT   FFC9    CHRIN    FFCF    CHROUT   FFD2    CKSTOP   10F9
 CLOSE    FFC3    CLRCHN   FFCC    COUNT    1340    COUNT1   1343
 CRNO     14EE    CRNO1    14FB    CRYS     14E1    CRYS1    14F9
 CURBYT   133C    CURDAT   146D    DATA     15EC    DECPA1   1557
 DECPAD   154F    DIGIT1   1435    DIGIT2   1436    DIGIT3   1437
 DIGIT4   1438    DISERR   1303    DLOOA    132C    DLOOC    1324
 DLOOE    1318    EXIT1    12F8    FA       00BA    GETADD   12A4
 GETBYT   12D7    GOON     112C    HEXA     15DC    IECIN    FFA5
 INIT     145D    INITD    1027    INITOK   1049    INPUT    1520
 INSTN1   14FF    INSTN2   150E    INSTNO   14FD    INSTNP   150C
 LA       00B8    MSE1     1491    MSG1     1344    MSG11    13D0
 MSG12    13D9    MSG13    13E0    MSG14    13EB    MSG15    13F5
 MSG16    1402    MSG17    140F    MSG18    1427    MSG2     1346
 MSG4     134D    MSG5     1359    MSG6     1368    MSG7     1373
 MSG8     13B2    MSG9     13C6    MSS1     1471    NEXTBY   11D3
 NONC     119C    NOSIX    1300    NUMBYT   133B    NUMPAD   146E
 OBJM     145F    OBJOK    10D3    OBJPRG   1014    OK2      1101
 OPEN     FFC0    OPENOF   10B5    OUF      1439    PADBYT   1470
 PADERR   1283    PADIT    1529    PADIT1   159E    PADIT2   15B1
 PADIT3   15B7    PFILE0   1070    PFILE1   1072    PFILE2   108C
 PFILE3   108E    PLOOP    14BD    PRBYT    15C6    PRBYTS   15C0
 PRGOK    10F1    PRINT    14BA    PROGM    1463    PRTCR    151B
 PUF      144B    QUITER   128C    READST   FFB7    RECHI    146A
 RECLO    1469    RECORD   133D    RERROR   1286    ROK      110B








SYMBOL TABLE

SYMBOL VALUE
 SA       00B9    SAVO     1467    SAVP     1468    SCROPT   1342
 SETLFS   FFBA    SETMSG   FF90    SETNAM   FFBD    SEXIT    14E0
 SKIP1    1145    SKIP2    11CE    SKIP3    1217    SKIP4    1260
 SKIP5    126E    SKPADD   118C    SOP1     10B0    SOUT     14D6
 STADD    133F    STATUS   0090    STOP     FFE1    STRPNT   14D0
 TALK     FFB4    TALKSA   FF96    TEMP     1341    UNTALK   FFAB
 YESC     11A4    ZEROPG   00FB    ZEROUR   00FD   

END OF ASSEMBLY
